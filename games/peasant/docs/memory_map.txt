Memory Map
~~~~~~~~~~

;========================= VID_LOGO

	; Does sound/detection

	; code is about 7k or so.  We leave out half the frames
	;	due to lack of space?  Just zx02 decompresses and page flips

	; loads title screen at $9000, decompresses animation and overlays
	;	to DRAW_PAGE via "hgr_overlay"

	$2000 = page1
	$4000 = page2, does page flipping
	$6000 = code
	$9000 - $AFFF = title

;========================= TITLE

	; set up HGR tables

	; loads two title images

	; loads sound:
	;   if mockingboard: pt3 player, music in $D000

	; if electric duet: plays it

	; when key pressed, flips to "tips" screen
	;	flip to page2
	;	load tips+print text to page1
	;	flip to page1

	; then loads "intro"

	$2000 = image with trogdor
	$4000 = image without trogdor
	$6000 = code			(8510 bytes)
	$D000 = pt3 music (4k)

;=========================== intro

	$6000 = code, 14k or so ($6000 - $9FFF)
	$A000 - $AFFF = peasant sprite data
	$D000 - $DFFF = pt3 music still (4k) though hacked
	
	New:
	$6000 - $7FFF = offscreen image
	$8000 - $B800 = code (14k?)
	
	$BC-$BD (512B)	Hi-res lookup tables

	blurgh
		river.zx02 = 2379
		knight.zx02 = 1938
		lake_e.zx02 = 1750


; ================================
; This is the layout for levels

; new level, a loader (up to 8k) is loaded at $4000 which decompresses
;	various parts and then jumps to $8000
; we might consider moving the peasant sprites up a bit in RAM to
;	free up some room for level data

$00	(256B)	Zero Page
$01	(256B)	Stack
$02	(256B)	Disk Lookup
$03	(256B)	Disk Lookup, IRQ vectors
$04-$07 (1k)	Text/GR page 1 (priority map)
$08-$0B (0.75k)	Text/GR page 2.  $08=boot, $09-$0A = qboot stage2
$0B-$1F (5.25k)	QLOAD disk and common routines (5376 bytes, 4996 bytes used)
$20-$3F (8k)	HGR Page 1	(PAGE1)
$40-$5f (8k)	HGR Page 2	(PAGE2)
$60-$7F (8k)	Offscreen Background
$80-$AF (12k)	Programs	(we limit to 12k, 12288 bytes, $30 pages)
$B0-$BF (4k)	peasant sprites
$C0-$CF	(n/a)	I/O

Language card (high 16k) (new)

$D0-$DF (bank1)	(4k)	per-levelstrings (biggest is ~3571 [outer]  currently)
$D0-$DF (bank2) (4k)	inventory	(3122 bytes)
$E0-$E7 (2k)    unused/temporary for overflow graphics/sprites
$E8-$E9 (512B)	temp area for load/save file marshalling
$EA-$EB (512B)	Hi-res lookup tables
$EC	(256B)	collision lookup
$ED	(256B)	verb table
$EE-$FF (4.5k)	parser code	(4608 bytes, 4332 currently)


Language card (high 16k) (old)

;$D0-$ED (bank1)	(7.5k)	per-levelstrings (biggest is ~3571 [outer]  currently)
;$D0-$DF (bank2) (4k)	inventory	(3122 bytes)
;$EE-$FF (both)	(4.5k)	parser code	(4608 bytes, 4332 currently)
;$D0-$DF (bank2) (4k)	inventory	(3122 bytes)
;$EE-$FF (both)	(4.5k)	parser code	(4608 bytes, 4332 currently)

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
